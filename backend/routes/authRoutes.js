// routes/authRoutes.js
const express = require('express');
const router = express.Router();

const authController = require('../controllers/authController');
const authMiddleware = require('../middlewares/authMiddleware');
const rateLimiter = require('../middlewares/rateLimiter');

// üìå ƒêƒÉng k√Ω
router.post('/register', rateLimiter, authController.register);

// üìå ƒêƒÉng nh·∫≠p
router.post('/login', rateLimiter, authController.login);

// üìå ƒêƒÉng xu·∫•t
router.post('/logout', authController.logout);

// üìå Refresh Token
router.post('/refresh-token', authController.refreshToken);

// üìå ƒê·ªïi m·∫≠t kh·∫©u (y√™u c·∫ßu login + token h·ª£p l·ªá)
router.post('/change-password', authMiddleware, authController.changePassword);

// üìå Qu√™n m·∫≠t kh·∫©u ‚Üí g·ª≠i OTP qua email
router.post('/forgot-password', rateLimiter, authController.forgotPassword);

// üìå X√°c th·ª±c OTP v√† ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
router.post('/reset-password', rateLimiter, authController.resetPassword);

// üìå Route test b·∫£o v·ªá b·ªüi middleware
router.get('/me', authMiddleware, (req, res) => {
  res.json({
    message: 'Th√¥ng tin user h·ª£p l·ªá',
    user: req.user
  });
});

module.exports = router;
